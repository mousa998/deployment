{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["function updateDateTime() {\r\n  const now = new Date();\r\n  const date = now.toLocaleDateString(\"ar-EG\", {\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n    year: \"numeric\",\r\n  });\r\n  const time = now.toLocaleTimeString(\"ar-EG\", {\r\n    hour: \"numeric\",\r\n    minute: \"2-digit\",\r\n  });\r\n\r\n  const dateTimeEl = document.getElementById(\"date-time\");\r\n  const timeEl = document.getElementById(\"time\");\r\n\r\n  if (dateTimeEl) dateTimeEl.textContent = date;\r\n  if (timeEl) timeEl.textContent = time;\r\n}\r\n\r\nfunction fetchWeather() {\r\n  fetch(\"https://wttr.in/?format=%C&lang=ar\")\r\n    .then((res) => res.text())\r\n    .then((condition) => {\r\n      const statusEl = document.getElementById(\"weather-status\");\r\n      const iconEl = document.getElementById(\"weather-icon\");\r\n\r\n      if (statusEl) statusEl.textContent = condition;\r\n\r\n      if (iconEl) {\r\n        if (condition.includes(\"غائم\")) {\r\n          iconEl.src = \"https://openweathermap.org/img/wn/03d.png\";\r\n        } else if (condition.includes(\"مشمس\")) {\r\n          iconEl.src = \"https://openweathermap.org/img/wn/01d.png\";\r\n        } else if (condition.includes(\"أمطار\")) {\r\n          iconEl.src = \"https://openweathermap.org/img/wn/09d.png\";\r\n        } else {\r\n          iconEl.src = \"https://openweathermap.org/img/wn/50d.png\";\r\n        }\r\n      }\r\n    })\r\n    .catch((err) => console.error(\"Weather fetch error:\", err));\r\n}\r\n\r\nfunction getCity() {\r\n  // ✅ CORS-safe API for location\r\n  fetch(\r\n    \"https://api.bigdatacloud.net/data/reverse-geocode-client?localityLanguage=ar\"\r\n  )\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      const locationEl = document.getElementById(\"location\");\r\n      if (locationEl)\r\n        locationEl.textContent = data.city || data.locality || \"غير معروف\";\r\n    })\r\n    .catch((err) => console.error(\"City fetch error:\", err));\r\n}\r\n\r\nfunction initWeatherWidget() {\r\n  fetchWeather();\r\n  updateDateTime();\r\n  setInterval(updateDateTime, 60000);\r\n}\r\n\r\nfunction updateYear() {\r\n  const currentYear = new Date().getFullYear();\r\n  document.querySelectorAll(\".year\").forEach((el) => {\r\n    el.textContent = currentYear;\r\n  });\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  initWeatherWidget();\r\n  getCity();\r\n  updateYear();\r\n  initFeedbackComponent();\r\n});\r\nfunction initFeedbackComponent() {\r\n  const feedbackForm = document.getElementById(\"feedbackForm\");\r\n  if (!feedbackForm) return;\r\n\r\n  // Get elements with IDs\r\n  const feedbackCollapse = new bootstrap.Collapse(\"#feedback\", {\r\n    toggle: false,\r\n  });\r\n  const positiveFeedback = document.getElementById(\"positiveFeedback\");\r\n  const positiveFeedbackBtn = document.getElementById(\"positiveFeedbackBtn\");\r\n  const negativeFeedbackBtn = document.getElementById(\"negativeFeedbackBtn\");\r\n  const closeFeedbackBtn = document.getElementById(\"closeFeedbackBtn\");\r\n\r\n  // Other elements remain the same\r\n  const reasonCheckboxes = document.querySelectorAll(\".reason-checkbox\");\r\n  const reasonInvalid = document\r\n    .querySelector(\".reason-checkbox\")\r\n    ?.closest(\"div\")\r\n    ?.parentElement.querySelector(\".invalid-feedback\");\r\n  const genderRadios = document.querySelectorAll('input[name=\"gender\"]');\r\n  const genderInvalid = genderRadios[0]\r\n    ?.closest(\"div\")\r\n    ?.parentElement.parentElement.parentElement.querySelector(\r\n      \".invalid-feedback\"\r\n    );\r\n\r\n  function showPositiveFeedback() {\r\n    feedbackCollapse.hide();\r\n    positiveFeedback.classList.remove(\"d-none\");\r\n    closeFeedbackBtn.classList.add(\"d-none\");\r\n    // Submit positive feedback logic here\r\n    console.log(\"Positive feedback submitted\");\r\n  }\r\n\r\n  function showNegativeFeedback() {\r\n    feedbackCollapse.show();\r\n    positiveFeedback.classList.add(\"d-none\");\r\n    closeFeedbackBtn.classList.remove(\"d-none\");\r\n  }\r\n\r\n  function closeFeedback() {\r\n    feedbackCollapse.hide();\r\n    positiveFeedback.classList.remove(\"d-none\");\r\n    closeFeedbackBtn.classList.add(\"d-none\");\r\n  }\r\n\r\n  // Event listeners with proper IDs\r\n  positiveFeedbackBtn?.addEventListener(\"click\", showPositiveFeedback);\r\n  negativeFeedbackBtn?.addEventListener(\"click\", showNegativeFeedback);\r\n  closeFeedbackBtn?.addEventListener(\"click\", closeFeedback);\r\n\r\n  // Rest of your validation code remains the same\r\n  function validateForm() {\r\n    let valid = true;\r\n\r\n    // Reasons validation\r\n    if (![...reasonCheckboxes].some((cb) => cb.checked)) {\r\n      reasonInvalid?.classList.add(\"d-block\");\r\n      valid = false;\r\n    } else {\r\n      reasonInvalid?.classList.remove(\"d-block\");\r\n    }\r\n\r\n    // Gender validation\r\n    if (![...genderRadios].some((rb) => rb.checked)) {\r\n      genderInvalid?.classList.add(\"d-block\");\r\n      valid = false;\r\n    } else {\r\n      genderInvalid?.classList.remove(\"d-block\");\r\n    }\r\n\r\n    return valid;\r\n  }\r\n\r\n  feedbackForm.addEventListener(\"submit\", function (e) {\r\n    if (!validateForm()) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    } else {\r\n      // Form is valid, submit logic here\r\n      console.log(\"Form submitted successfully\");\r\n    }\r\n  });\r\n\r\n  // Attach validation listeners\r\n  reasonCheckboxes.forEach((cb) =>\r\n    cb.addEventListener(\"change\", () => {\r\n      if ([...reasonCheckboxes].some((c) => c.checked)) {\r\n        reasonInvalid?.classList.remove(\"d-block\");\r\n      }\r\n    })\r\n  );\r\n\r\n  genderRadios.forEach((rb) =>\r\n    rb.addEventListener(\"change\", () => {\r\n      if ([...genderRadios].some((r) => r.checked)) {\r\n        genderInvalid?.classList.remove(\"d-block\");\r\n      }\r\n    })\r\n  );\r\n}\r\n"],"file":"main.js"}